{"ast":null,"code":"var _jsxFileName = \"/Users/haialaluf/Workspace/Achiad/Aleph/React-Okta-SAML/client/OLD/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport logging from \"./config/logging\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    logging.info(\"checking authentication by calling /me\");\n    axios.get(\"https://woodcock-more-arguably.ngrok-free.app/me\", {\n      headers: {\n        Cookie: 'abuse_interstitial=woodcock-more-arguably.ngrok-free.app; connect.sid=s%3AQdCSXXJCFlFh46dHAqpu-5INlwdtyIuk.6wffUppz04IGvfP%2FAOtX4riu16%2FpSH6O7DEfUTWx3vE'\n      }\n    }).then(res => {\n      logging.info(res.data.user, \"/me\");\n\n      /**\n       * if user has no nameID it means that he is not authenticated yet!\n       * redirect to login for Okta auth\n       */\n      if (res.data.user.nameID) {\n        setEmail(res.data.user.nameID);\n        setLoading(false);\n      } else {\n        redirectToLogin();\n      }\n    }).catch(err => {\n      debugger;\n      logging.error(err, \"/me\");\n      redirectToLogin();\n    });\n  }, []);\n\n  // Redirect to login\n  const redirectToLogin = () => {\n    window.location.replace(\"http://localhost:5000/login\");\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Woho! \", email, \" is now authenticated via Okta.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"vAaWNfYrNhCuywAiVcogyLGbMUw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","logging","axios","jsxDEV","_jsxDEV","App","_s","loading","setLoading","email","setEmail","info","get","headers","Cookie","then","res","data","user","nameID","redirectToLogin","catch","err","error","window","location","replace","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/haialaluf/Workspace/Achiad/Aleph/React-Okta-SAML/client/OLD/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport logging from \"./config/logging\";\nimport axios from \"axios\";\n\nconst App: React.FunctionComponent = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [email, setEmail] = useState<string>(\"\");\n\n  useEffect(() => {\n    logging.info(\"checking authentication by calling /me\");\n\n    axios\n      .get(\"https://woodcock-more-arguably.ngrok-free.app/me\", {\n        headers: {\n          Cookie: 'abuse_interstitial=woodcock-more-arguably.ngrok-free.app; connect.sid=s%3AQdCSXXJCFlFh46dHAqpu-5INlwdtyIuk.6wffUppz04IGvfP%2FAOtX4riu16%2FpSH6O7DEfUTWx3vE'\n        }\n      })\n      .then((res) => {\n        logging.info(res.data.user, \"/me\");\n\n        /**\n         * if user has no nameID it means that he is not authenticated yet!\n         * redirect to login for Okta auth\n         */\n        if (res.data.user.nameID) {\n          setEmail(res.data.user.nameID);\n          setLoading(false);\n        } else {\n          redirectToLogin();\n        }\n      })\n      .catch((err) => {\n        debugger\n        logging.error(err, \"/me\");\n        redirectToLogin();\n      });\n  }, []);\n\n  // Redirect to login\n  const redirectToLogin = () => {\n    window.location.replace(\"http://localhost:5000/login\");\n  };\n\n  if (loading) return <p>loading...</p>;\n  return <p>Woho! {email} is now authenticated via Okta.</p>;\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAA4B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdE,OAAO,CAACU,IAAI,CAAC,wCAAwC,CAAC;IAEtDT,KAAK,CACFU,GAAG,CAAC,kDAAkD,EAAE;MACvDC,OAAO,EAAE;QACPC,MAAM,EAAE;MACV;IACF,CAAC,CAAC,CACDC,IAAI,CAAEC,GAAG,IAAK;MACbf,OAAO,CAACU,IAAI,CAACK,GAAG,CAACC,IAAI,CAACC,IAAI,EAAE,KAAK,CAAC;;MAElC;AACR;AACA;AACA;MACQ,IAAIF,GAAG,CAACC,IAAI,CAACC,IAAI,CAACC,MAAM,EAAE;QACxBT,QAAQ,CAACM,GAAG,CAACC,IAAI,CAACC,IAAI,CAACC,MAAM,CAAC;QAC9BX,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,MAAM;QACLY,eAAe,CAAC,CAAC;MACnB;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACd;MACArB,OAAO,CAACsB,KAAK,CAACD,GAAG,EAAE,KAAK,CAAC;MACzBF,eAAe,CAAC,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,eAAe,GAAGA,CAAA,KAAM;IAC5BI,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,6BAA6B,CAAC;EACxD,CAAC;EAED,IAAInB,OAAO,EAAE,oBAAOH,OAAA;IAAAuB,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,oBAAO3B,OAAA;IAAAuB,QAAA,GAAG,QAAM,EAAClB,KAAK,EAAC,iCAA+B;EAAA;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;AAC5D,CAAC;AAACzB,EAAA,CAzCID,GAA4B;AAAA2B,EAAA,GAA5B3B,GAA4B;AA2ClC,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}